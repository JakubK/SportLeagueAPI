// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportLeagueAPI.Context;

namespace SportLeagueAPI.Migrations
{
    [DbContext(typeof(LeagueDbContext))]
    [Migration("20190819121243_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("SportLeagueAPI.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cool Event"
                        });
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Media", b =>
                {
                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventId");

                    b.Property<int>("OwnerId");

                    b.HasKey("Url");

                    b.HasIndex("EventId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Url = "https://google.com",
                            OwnerId = 1
                        },
                        new
                        {
                            Url = "https://wp.pl",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("SportLeagueAPI.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("MediaUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MediaUrl");

                    b.ToTable("Newses");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MediaUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MediaUrl");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Settlement", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("MediaUrl");

                    b.HasKey("Name");

                    b.HasIndex("MediaUrl");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Media", b =>
                {
                    b.HasOne("SportLeagueAPI.Models.Event")
                        .WithMany("Medias")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.News", b =>
                {
                    b.HasOne("SportLeagueAPI.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaUrl");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Player", b =>
                {
                    b.HasOne("SportLeagueAPI.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaUrl");
                });

            modelBuilder.Entity("SportLeagueAPI.Models.Settlement", b =>
                {
                    b.HasOne("SportLeagueAPI.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaUrl");
                });
#pragma warning restore 612, 618
        }
    }
}
